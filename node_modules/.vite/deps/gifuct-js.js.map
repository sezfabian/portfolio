{"version":3,"file":"gifuct-js.js","names":["parse","conditional","loop","buildStream","readByte","peekByte","readBytes","peekBytes","readString","readUnsigned","readArray","subBitsTotal","readBits","_uint","deinterlace","cpRow","fromRow","toRow","lzw","parseGIF","generatePatch","decompressFrame","decompressFrames"],"sources":["../../js-binary-schema-parser/lib/index.js","../../js-binary-schema-parser/lib/parsers/uint8.js","../../js-binary-schema-parser/lib/schemas/gif.js","../../gifuct-js/lib/deinterlace.js","../../gifuct-js/lib/lzw.js","../../gifuct-js/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loop = exports.conditional = exports.parse = void 0;\n\nvar parse = function parse(stream, schema) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : result;\n\n  if (Array.isArray(schema)) {\n    schema.forEach(function (partSchema) {\n      return parse(stream, partSchema, result, parent);\n    });\n  } else if (typeof schema === 'function') {\n    schema(stream, result, parent, parse);\n  } else {\n    var key = Object.keys(schema)[0];\n\n    if (Array.isArray(schema[key])) {\n      parent[key] = {};\n      parse(stream, schema[key], result, parent[key]);\n    } else {\n      parent[key] = schema[key](stream, result, parent, parse);\n    }\n  }\n\n  return result;\n};\n\nexports.parse = parse;\n\nvar conditional = function conditional(schema, conditionFunc) {\n  return function (stream, result, parent, parse) {\n    if (conditionFunc(stream, result, parent)) {\n      parse(stream, schema, result, parent);\n    }\n  };\n};\n\nexports.conditional = conditional;\n\nvar loop = function loop(schema, continueFunc) {\n  return function (stream, result, parent, parse) {\n    var arr = [];\n    var lastStreamPos = stream.pos;\n\n    while (continueFunc(stream, result, parent)) {\n      var newParent = {};\n      parse(stream, schema, result, newParent); // cases when whole file is parsed but no termination is there and stream position is not getting updated as well\n      // it falls into infinite recursion, null check to avoid the same\n\n      if (stream.pos === lastStreamPos) {\n        break;\n      }\n\n      lastStreamPos = stream.pos;\n      arr.push(newParent);\n    }\n\n    return arr;\n  };\n};\n\nexports.loop = loop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;\n\n// Default stream and parsers for Uint8TypedArray data type\nvar buildStream = function buildStream(uint8Data) {\n  return {\n    data: uint8Data,\n    pos: 0\n  };\n};\n\nexports.buildStream = buildStream;\n\nvar readByte = function readByte() {\n  return function (stream) {\n    return stream.data[stream.pos++];\n  };\n};\n\nexports.readByte = readByte;\n\nvar peekByte = function peekByte() {\n  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (stream) {\n    return stream.data[stream.pos + offset];\n  };\n};\n\nexports.peekByte = peekByte;\n\nvar readBytes = function readBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos += length);\n  };\n};\n\nexports.readBytes = readBytes;\n\nvar peekBytes = function peekBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos + length);\n  };\n};\n\nexports.peekBytes = peekBytes;\n\nvar readString = function readString(length) {\n  return function (stream) {\n    return Array.from(readBytes(length)(stream)).map(function (value) {\n      return String.fromCharCode(value);\n    }).join('');\n  };\n};\n\nexports.readString = readString;\n\nvar readUnsigned = function readUnsigned(littleEndian) {\n  return function (stream) {\n    var bytes = readBytes(2)(stream);\n    return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];\n  };\n};\n\nexports.readUnsigned = readUnsigned;\n\nvar readArray = function readArray(byteSize, totalOrFunc) {\n  return function (stream, result, parent) {\n    var total = typeof totalOrFunc === 'function' ? totalOrFunc(stream, result, parent) : totalOrFunc;\n    var parser = readBytes(byteSize);\n    var arr = new Array(total);\n\n    for (var i = 0; i < total; i++) {\n      arr[i] = parser(stream);\n    }\n\n    return arr;\n  };\n};\n\nexports.readArray = readArray;\n\nvar subBitsTotal = function subBitsTotal(bits, startIndex, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result += bits[startIndex + i] && Math.pow(2, length - i - 1);\n  }\n\n  return result;\n};\n\nvar readBits = function readBits(schema) {\n  return function (stream) {\n    var _byte = readByte()(stream); // convert the byte to bit array\n\n\n    var bits = new Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      bits[7 - i] = !!(_byte & 1 << i);\n    } // convert the bit array to values based on the schema\n\n\n    return Object.keys(schema).reduce(function (res, key) {\n      var def = schema[key];\n\n      if (def.length) {\n        res[key] = subBitsTotal(bits, def.index, def.length);\n      } else {\n        res[key] = bits[def.index];\n      }\n\n      return res;\n    }, {});\n  };\n};\n\nexports.readBits = readBits;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\"../\");\n\nvar _uint = require(\"../parsers/uint8\");\n\n// a set of 0x00 terminated subblocks\nvar subBlocksSchema = {\n  blocks: function blocks(stream) {\n    var terminator = 0x00;\n    var chunks = [];\n    var streamSize = stream.data.length;\n    var total = 0;\n\n    for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {\n      // size becomes undefined for some case when file is corrupted and  terminator is not proper \n      // null check to avoid recursion\n      if (!size) break; // catch corrupted files with no terminator\n\n      if (stream.pos + size >= streamSize) {\n        var availableSize = streamSize - stream.pos;\n        chunks.push((0, _uint.readBytes)(availableSize)(stream));\n        total += availableSize;\n        break;\n      }\n\n      chunks.push((0, _uint.readBytes)(size)(stream));\n      total += size;\n    }\n\n    var result = new Uint8Array(total);\n    var offset = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      result.set(chunks[i], offset);\n      offset += chunks[i].length;\n    }\n\n    return result;\n  }\n}; // global control extension\n\nvar gceSchema = (0, _.conditional)({\n  gce: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    byteSize: (0, _uint.readByte)()\n  }, {\n    extras: (0, _uint.readBits)({\n      future: {\n        index: 0,\n        length: 3\n      },\n      disposal: {\n        index: 3,\n        length: 3\n      },\n      userInput: {\n        index: 6\n      },\n      transparentColorGiven: {\n        index: 7\n      }\n    })\n  }, {\n    delay: (0, _uint.readUnsigned)(true)\n  }, {\n    transparentColorIndex: (0, _uint.readByte)()\n  }, {\n    terminator: (0, _uint.readByte)()\n  }]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xf9;\n}); // image pipeline block\n\nvar imageSchema = (0, _.conditional)({\n  image: [{\n    code: (0, _uint.readByte)()\n  }, {\n    descriptor: [{\n      left: (0, _uint.readUnsigned)(true)\n    }, {\n      top: (0, _uint.readUnsigned)(true)\n    }, {\n      width: (0, _uint.readUnsigned)(true)\n    }, {\n      height: (0, _uint.readUnsigned)(true)\n    }, {\n      lct: (0, _uint.readBits)({\n        exists: {\n          index: 0\n        },\n        interlaced: {\n          index: 1\n        },\n        sort: {\n          index: 2\n        },\n        future: {\n          index: 3,\n          length: 2\n        },\n        size: {\n          index: 5,\n          length: 3\n        }\n      })\n    }]\n  }, (0, _.conditional)({\n    lct: (0, _uint.readArray)(3, function (stream, result, parent) {\n      return Math.pow(2, parent.descriptor.lct.size + 1);\n    })\n  }, function (stream, result, parent) {\n    return parent.descriptor.lct.exists;\n  }), {\n    data: [{\n      minCodeSize: (0, _uint.readByte)()\n    }, subBlocksSchema]\n  }]\n}, function (stream) {\n  return (0, _uint.peekByte)()(stream) === 0x2c;\n}); // plain text block\n\nvar textSchema = (0, _.conditional)({\n  text: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    preData: function preData(stream, result, parent) {\n      return (0, _uint.readBytes)(parent.text.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0x01;\n}); // application block\n\nvar applicationSchema = (0, _.conditional)({\n  application: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    id: function id(stream, result, parent) {\n      return (0, _uint.readString)(parent.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xff;\n}); // comment block\n\nvar commentSchema = (0, _.conditional)({\n  comment: [{\n    codes: (0, _uint.readBytes)(2)\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xfe;\n});\nvar schema = [{\n  header: [{\n    signature: (0, _uint.readString)(3)\n  }, {\n    version: (0, _uint.readString)(3)\n  }]\n}, {\n  lsd: [{\n    width: (0, _uint.readUnsigned)(true)\n  }, {\n    height: (0, _uint.readUnsigned)(true)\n  }, {\n    gct: (0, _uint.readBits)({\n      exists: {\n        index: 0\n      },\n      resolution: {\n        index: 1,\n        length: 3\n      },\n      sort: {\n        index: 4\n      },\n      size: {\n        index: 5,\n        length: 3\n      }\n    })\n  }, {\n    backgroundColorIndex: (0, _uint.readByte)()\n  }, {\n    pixelAspectRatio: (0, _uint.readByte)()\n  }]\n}, (0, _.conditional)({\n  gct: (0, _uint.readArray)(3, function (stream, result) {\n    return Math.pow(2, result.lsd.gct.size + 1);\n  })\n}, function (stream, result) {\n  return result.lsd.gct.exists;\n}), // content frames\n{\n  frames: (0, _.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function (stream) {\n    var nextCode = (0, _uint.peekByte)()(stream); // rather than check for a terminator, we should check for the existence\n    // of an ext or image block to avoid infinite loops\n    //var terminator = 0x3B;\n    //return nextCode !== terminator;\n\n    return nextCode === 0x21 || nextCode === 0x2c;\n  })\n}];\nvar _default = schema;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deinterlace = void 0;\n\n/**\r\n * Deinterlace function from https://github.com/shachaf/jsgif\r\n */\nvar deinterlace = function deinterlace(pixels, width) {\n  var newPixels = new Array(pixels.length);\n  var rows = pixels.length / width;\n\n  var cpRow = function cpRow(toRow, fromRow) {\n    var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n    newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n  }; // See appendix E.\n\n\n  var offsets = [0, 4, 2, 1];\n  var steps = [8, 8, 4, 2];\n  var fromRow = 0;\n\n  for (var pass = 0; pass < 4; pass++) {\n    for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n      cpRow(toRow, fromRow);\n      fromRow++;\n    }\n  }\n\n  return newPixels;\n};\n\nexports.deinterlace = deinterlace;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lzw = void 0;\n\n/**\r\n * javascript port of java LZW decompression\r\n * Original java author url: https://gist.github.com/devunwired/4479231\r\n */\nvar lzw = function lzw(minCodeSize, data, pixelCount) {\n  var MAX_STACK_SIZE = 4096;\n  var nullCode = -1;\n  var npix = pixelCount;\n  var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n  var dstPixels = new Array(pixelCount);\n  var prefix = new Array(MAX_STACK_SIZE);\n  var suffix = new Array(MAX_STACK_SIZE);\n  var pixelStack = new Array(MAX_STACK_SIZE + 1); // Initialize GIF data stream decoder.\n\n  data_size = minCodeSize;\n  clear = 1 << data_size;\n  end_of_information = clear + 1;\n  available = clear + 2;\n  old_code = nullCode;\n  code_size = data_size + 1;\n  code_mask = (1 << code_size) - 1;\n\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  } // Decode GIF pixel stream.\n\n\n  var datum, bits, count, first, top, pi, bi;\n  datum = bits = count = first = top = pi = bi = 0;\n\n  for (i = 0; i < npix;) {\n    if (top === 0) {\n      if (bits < code_size) {\n        // get the next byte\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      } // Get the next code.\n\n\n      code = datum & code_mask;\n      datum >>= code_size;\n      bits -= code_size; // Interpret the code\n\n      if (code > available || code == end_of_information) {\n        break;\n      }\n\n      if (code == clear) {\n        // Reset decoder.\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        available = clear + 2;\n        old_code = nullCode;\n        continue;\n      }\n\n      if (old_code == nullCode) {\n        pixelStack[top++] = suffix[code];\n        old_code = code;\n        first = code;\n        continue;\n      }\n\n      in_code = code;\n\n      if (code == available) {\n        pixelStack[top++] = first;\n        code = old_code;\n      }\n\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n\n      first = suffix[code] & 0xff;\n      pixelStack[top++] = first; // add a new string to the table, but only if space is available\n      // if not, just continue with current table until a clear code is found\n      // (deferred clear code implementation as per GIF spec)\n\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = old_code;\n        suffix[available] = first;\n        available++;\n\n        if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n          code_size++;\n          code_mask += available;\n        }\n      }\n\n      old_code = in_code;\n    } // Pop a pixel off the pixel stack.\n\n\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0; // clear missing pixels\n  }\n\n  return dstPixels;\n};\n\nexports.lzw = lzw;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex] || [0, 0, 0];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;"],"mappings":"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"}